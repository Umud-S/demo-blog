{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","d","dialogItem","to","activeClassName","active","name","Message","message","messageImage","messageLogo","src","image","messageItem","maxLength200","maxLengthCreater","WithMessageAddForm","reduxForm","form","Form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","addButton","Dialogs","dialogElements","messagePage","dialogs","map","key","messageElements","messages","m","dialogItems","values","addMessage","newMessageAdd","DialogsContainer","this","React","Component","compose","connect","state"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,WAAa,4BAA4B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,YAAc,6BAA6B,aAAe,8BAA8B,YAAc,6BAA6B,WAAa,4BAA4B,UAAY,6B,+HCehXC,EAXI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAEC,YAEV,kBAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAEI,QAASR,EAAMS,Q,iBCMtDC,EAbC,SAACV,GACb,OACI,yBAAKG,UAAWC,IAAEO,SACd,yBAAKR,UAAWC,IAAEQ,cACd,yBAAKT,UAAWC,IAAES,YACbC,IAAKC,OAEd,yBAAKZ,UAAWC,IAAEY,aACbhB,EAAMW,W,0CCHnBM,EAAeC,YAAiB,KAehCC,EAAqBC,YAAU,CAACC,KAAM,oBAAjBD,EAdF,SAACpB,GACpB,OAAO,kBAACsB,EAAA,EAAD,CAAMC,SAAUvB,EAAMwB,cACzB,kBAACC,EAAA,EAAD,CAEOC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBR,KAAK,gBACLqB,YAAa,gBACpB,6BACI,4BAAQ3B,UAAWC,IAAE2B,WAArB,oBA4BGC,EArBC,SAAChC,GACb,IAAIiC,EAAiBjC,EAAMkC,YAAYC,QAAQC,KAAI,SAAAhC,GAAC,OAChD,kBAAC,EAAD,CAAYK,KAAML,EAAEK,KAAM4B,IAAKjC,EAAEF,QAEjCoC,EAAkBtC,EAAMkC,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAClD,kBAAC,EAAD,CAAS7B,QAAS6B,EAAE7B,QAAS0B,IAAKG,EAAEtC,QAMxC,OAAO,yBAAKC,UAAWC,IAAE+B,SACrB,yBAAKhC,UAAWC,IAAEqC,aACbR,GAEL,yBAAK9B,UAAWC,IAAEmC,UACbD,EACD,kBAACnB,EAAD,CAAoBI,SATT,SAACmB,GAChB1C,EAAM2C,WAAWD,EAAOE,qB,eCtB1BC,E,uKAEE,OAAO,kBAAC,EAAYC,KAAK9C,W,GAFF+C,IAAMC,WAKtBC,sBACXC,aAZkB,SAAAC,GAClB,MAAO,CACHjB,YAAaiB,EAAMjB,eAUE,CACrBS,iBAFOM,CAKbJ","file":"static/js/4.2f200acc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3BgrY\",\"dialogItem\":\"Dialogs_dialogItem__19KBo\",\"active\":\"Dialogs_active__2Dvjf\",\"messages\":\"Dialogs_messages__lUgek\",\"message\":\"Dialogs_message__3ksCo\",\"messageItem\":\"Dialogs_messageItem__1U_41\",\"messageImage\":\"Dialogs_messageImage__2u650\",\"messageLogo\":\"Dialogs_messageLogo__1YUoX\",\"messageAdd\":\"Dialogs_messageAdd__3ZrMG\",\"addButton\":\"Dialogs_addButton__1pjmt\"};","import React from 'react';\r\nimport d from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={d.dialogItem}>\r\n            {/*<ul><li>*/}\r\n                <NavLink to={path} activeClassName={d.active}>{props.name}</NavLink>\r\n            {/*</li></ul>*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport d from \"./../Dialogs.module.css\";\r\nimport image from \"./../../assets/user-default-logo.png\"\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={d.message}>\r\n            <div className={d.messageImage}>\r\n                <img className={d.messageLogo}\r\n                     src={image}/>\r\n            </div>\r\n            <div className={d.messageItem}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Message;\r\n","import React from 'react';\r\nimport d from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormControls/FormControls\";\r\nimport {maxLengthCreater, required} from \"../../utils/validators/validators\";\r\n\r\nlet maxLength200 = maxLengthCreater(200);\r\nconst MessageAddForm = (props) => {\r\n    return <Form onSubmit={props.handleSubmit} >\r\n        <Field\r\n            // className={d.textArea}\r\n               component={Textarea}\r\n               validate={[required, maxLength200]}\r\n               name='newMessageAdd'\r\n               placeholder={'New Message'}/>\r\n        <div>\r\n            <button className={d.addButton}>Add Message</button>\r\n        </div>\r\n    </Form>\r\n\r\n}\r\nlet WithMessageAddForm = reduxForm({form: 'dialogAddMessage'})(MessageAddForm)\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.messagePage.dialogs.map(d => (\r\n        <DialogItem name={d.name} key={d.id}/>\r\n    ))\r\n    let messageElements = props.messagePage.messages.map(m => (\r\n        <Message message={m.message} key={m.id}/>\r\n    ))\r\n\r\n    let onAddMessage = (values) => {\r\n        props.addMessage(values.newMessageAdd)\r\n    }\r\n    return <div className={d.dialogs}>\r\n        <div className={d.dialogItems}>\r\n            {dialogElements}\r\n        </div>\r\n        <div className={d.messages}>\r\n            {messageElements}\r\n            <WithMessageAddForm onSubmit={onAddMessage}/>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Dialogs;\r\n\r\n\r\n// let text = React.createRef();\r\n// text.current.value ile teqin valuesin ala bilerik\r\n// ref={text} tagin icine yaza bilerik\r\n\r\n\r\n// let onAddButtonClick = (event) => {\r\n//     let newText = event.target.value;\r\n//     props.addMessage(newText);\r\n// }\r\n// let onTextChange = (event) => {\r\n//     let newText = event.target.value;\r\n//     props.updateMessageTextChange(newText);\r\n// }\r\n","import React from 'react';\r\nimport {addMessage} from \"../../redux/dialogReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        messagePage: state.messagePage,\r\n        // isAuth: state.auth.isAuth\r\n    }\r\n}\r\nclass DialogsContainer extends React.Component{\r\n    render() {\r\n        return <Dialogs {...this.props}/>\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addMessage\r\n    }),\r\n    // WithAuthRedirect\r\n)(DialogsContainer)\r\n"],"sourceRoot":""}